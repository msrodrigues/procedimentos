lista <- list(split(respostas, respostas$residente))
slices <- residentes %>%
filter(!is.na(r)) %>%
select((residente)) %>%
pull(residente)
# slices <- slices$residente
todas_respostas <- respostas
# todas_respostas %>%
#   filter(nick == "Zaffari")
#respostas$r
#respostas <- respostas %>%
#  filter(r != "#N/A")
for (v in slices) {
render("~/Dropbox/Coding/R/misc/procedimentos/src/reports.Rmd",
output_file=paste0("~/Dropbox/Coding/R/misc/procedimentos/out/", v, ".html"),
params=list(new_title = paste("Relatório para Dr(a).", v), nome = v, df_respostas = respostas, df_residentes = residentes))
}
respostas %>%
filter(residente == "Osmar Coleoni")
respostas
respostas %>%
filter(residente == "Osmar Colleoni")
(Sys.Date() - 30)
respostas %>%
group_by(nick) %>%
filter(data >= (Sys.Date() - 30))
respostas %>%
group_by(nick) %>%
filter(data >= (Sys.Date() - 30)) %>%
summarise(n = n()) %>%
mutate(etiqueta = paste(nick, "\n",n, " proc.")) %>%
treemap(index = "etiqueta",
vSize = "n",title = "Quantidade de Procedimentos por residente nos últimos 30 dias")
respostas %>%
group_by(nick) %>%
filter(data >= (Sys.Date() - 30))
mes30 <- respostas %>%
group_by(nick) %>%
filter(data >= (Sys.Date() - 30))
View(mes30)
View(mes30)
mes30 <- respostas %>%
filter(data >= (Sys.Date() - 30))
View(mes30)
View(mes30)
respostas %>%
filter(data >= (Sys.Date() - 30))
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(extrafont)
library(scales)
library(chron)
library(treemap)
library(ggthemes)
library(ggmap)
library(knitr)
library(readr)
library(readxl)
library(xtable)
library(kableExtra)
library(rebus)
library(tibble)
library(cronR)
library(lubridate)
library(tidyverse)
library(googlesheets)
setwd("~/Dropbox/Coding/R/misc/procedimentos")
Sys.setenv(TZ="Brazil/East")
options(tz="Brazil/East")
Sys.getenv("TZ")
Sys.setlocale("LC_TIME", "pt_BR")
source("~/Dropbox/Coding/R/funs/msrfun.R")
source("~/Dropbox/Coding/R/misc/procedimentos/01 - Carrega Planilhas.R")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(extrafont)
library(scales)
library(chron)
library(treemap)
library(ggthemes)
library(ggmap)
library(knitr)
library(readr)
library(readxl)
library(xtable)
library(kableExtra)
library(rebus)
library(tibble)
library(cronR)
library(lubridate)
library(tidyverse)
library(googlesheets)
setwd("~/Dropbox/Coding/R/misc/procedimentos")
Sys.setenv(TZ="Brazil/East")
options(tz="Brazil/East")
Sys.getenv("TZ")
Sys.setlocale("LC_TIME", "pt_BR")
source("~/Dropbox/Coding/R/funs/msrfun.R")
source("~/Dropbox/Coding/R/misc/procedimentos/01 - Carrega Planilhas.R")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(extrafont)
library(scales)
library(chron)
library(treemap)
library(ggthemes)
library(ggmap)
library(knitr)
library(readr)
library(readxl)
library(xtable)
library(kableExtra)
library(rebus)
library(tibble)
library(cronR)
library(lubridate)
library(tidyverse)
library(googlesheets)
setwd("~/Dropbox/Coding/R/misc/procedimentos")
Sys.setenv(TZ="Brazil/East")
options(tz="Brazil/East")
Sys.getenv("TZ")
Sys.setlocale("LC_TIME", "pt_BR")
source("~/Dropbox/Coding/R/funs/msrfun.R")
source("~/Dropbox/Coding/R/misc/procedimentos/01 - Carrega Planilhas.R")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(extrafont)
library(scales)
library(chron)
library(treemap)
library(ggthemes)
library(ggmap)
library(knitr)
library(readr)
library(readxl)
library(xtable)
library(kableExtra)
library(rebus)
library(tibble)
library(cronR)
library(lubridate)
library(tidyverse)
library(googlesheets)
setwd("~/Dropbox/Coding/R/misc/procedimentos")
Sys.setenv(TZ="Brazil/East")
options(tz="Brazil/East")
Sys.getenv("TZ")
Sys.setlocale("LC_TIME", "pt_BR")
source("~/Dropbox/Coding/R/funs/msrfun.R")
source("~/Dropbox/Coding/R/misc/procedimentos/01 - Carrega Planilhas.R")
source('~/Dropbox/Coding/R/misc/procedimentos/src/01 - Carrega planilhas.R', echo=TRUE)
respostas %>%
filter(residente == "Osmar Colleoni")
osmar <- respostas %>%
filter(residente == "Osmar Colleoni")
View(osmar)
View(osmar)
View(todas_respostas)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(extrafont)
library(scales)
library(chron)
library(treemap)
library(ggthemes)
library(ggmap)
library(knitr)
library(readr)
library(readxl)
library(xtable)
library(kableExtra)
library(rebus)
library(tibble)
library(cronR)
library(lubridate)
library(tidyverse)
library(googlesheets)
library(rmarkdown)
setwd("~/Dropbox/Coding/R/misc/procedimentos")
Sys.setenv(TZ="Brazil/East")
options(tz="Brazil/East")
Sys.getenv("TZ")
Sys.setlocale("LC_TIME", "pt_BR")
source("~/Dropbox/Coding/R/funs/msrfun.R")
# source("~/Dropbox/Coding/R/misc/procedimentos/src/01 - Carrega Planilhas.R")
# Carrega os dados
respostas <- readRDS(file = "~/Dropbox/Coding/R/misc/procedimentos/data/respostas.rds")
residentes <- readRDS(file = "~/Dropbox/Coding/R/misc/procedimentos/data/residentes.rds")
residentes$residente
residentes$r <- ifelse(residentes$r == "#N/A", NA, residentes$r)
residentes$r
lista <- list(split(respostas, respostas$residente))
slices <- residentes %>%
filter(!is.na(r)) %>%
select((residente)) %>%
pull(residente)
# slices <- slices$residente
todas_respostas <- respostas
# todas_respostas %>%
#   filter(nick == "Zaffari")
#respostas$r
#respostas <- respostas %>%
#  filter(r != "#N/A")
for (v in slices) {
render("~/Dropbox/Coding/R/misc/procedimentos/src/reports.Rmd",
output_file=paste0("~/Dropbox/Coding/R/misc/procedimentos/out/", v, ".html"),
params=list(new_title = paste("Relatório para Dr(a).", v), nome = v, df_respostas = respostas, df_residentes = residentes))
}
source('~/Dropbox/Coding/R/misc/procedimentos/src/01 - Carrega planilhas.R', echo=TRUE)
# Carrega o dashboard na variável dash
planilha <- gs_title("Procedimentos (Responses)")
library(googlesheets4)
# Carrega o dashboard na variável dash
planilha <- read_sheet("Procedimentos (Responses)")
# Carrega o dashboard na variável dash
planilha <- read_sheet("Procedimentos (Responses)")
#drive_auth()
#sheets_auth(token = drive_token())
url <- "https://docs.google.com/spreadsheets/d/14SoUTZtXKO5clB5cdayhn8cD2g6bEOQbK9TVN7h8HlY/edit#gid=931937932"
# Carrega a SpreadSheet(ss) do Dashboard completo
ss <- drive_get(id = url)
library(googlesheets4)
setwd("~/Dropbox/Coding/R/misc/procedimentos/")
source("~/Dropbox/Coding/R/funs/msrfun.R")
Sys.setenv(TZ="Brazil/East")
options(tz="Brazil/East")
Sys.getenv("TZ")
Sys.setlocale("LC_TIME", "pt_BR")
#drive_auth()
#sheets_auth(token = drive_token())
url <- "https://docs.google.com/spreadsheets/d/14SoUTZtXKO5clB5cdayhn8cD2g6bEOQbK9TVN7h8HlY/edit#gid=931937932"
# Carrega a SpreadSheet(ss) do Dashboard completo
ss <- drive_get(id = url)
drive_auth()
library(RColorBrewer)
library(extrafont)
library(scales)
library(chron)
library(treemap)
library(ggthemes)
library(ggmap)
library(knitr)
library(readr)
library(readxl)
library(xtable)
library(kableExtra)
library(rebus)
library(tibble)
library(cronR)
library(lubridate)
library(tidyverse)
library(googlesheets4)
setwd("~/Dropbox/Coding/R/misc/procedimentos/")
source("~/Dropbox/Coding/R/funs/msrfun.R")
Sys.setenv(TZ="Brazil/East")
options(tz="Brazil/East")
Sys.getenv("TZ")
Sys.setlocale("LC_TIME", "pt_BR")
drive_auth()
sheets_auth(token = drive_token())
url <- "https://docs.google.com/spreadsheets/d/14SoUTZtXKO5clB5cdayhn8cD2g6bEOQbK9TVN7h8HlY/edit#gid=931937932"
# Carrega a SpreadSheet(ss) do Dashboard completo
ss <- drive_get(id = url)
library(googledrive)
url <- "https://docs.google.com/spreadsheets/d/14SoUTZtXKO5clB5cdayhn8cD2g6bEOQbK9TVN7h8HlY/edit#gid=931937932"
# Carrega a SpreadSheet(ss) do Dashboard completo
ss <- drive_get(id = url)
# Carrega a SpreadSheet(ss) do Dashboard completo
ss <- drive_get(id = url)
# Listas as planilhas dentro do arquivo do Dashboard
sheets_get(ss)
# Listas as planilhas dentro do arquivo do Dashboard
sheets_get(ss)
# Carrega a Planilha da PUC
puc <- sheets_read(ss, sheet = "Procedimentos (Responses)")
# Carrega a Planilha da PUC
respostas <- sheets_read(ss, sheet = "Procedimentos (Responses)")
# Carrega a Planilha das respostas
respostas <- sheets_read(ss, sheet = "Procedimentos (Responses)")
View(ss)
View(ss)
# Carrega a Planilha das respostas
respostas_ws <- sheets_read(ss, sheet = "Procedimentos (Responses)")
# Carrega a Planilha das respostas
respostas_ws <- sheets_read(ss, sheet = "Procedimentos (Responses)")
# Carrega a Planilha das respostas
respostas_ws <- sheets_read(ss, sheet = "Form Responses 1")
lista_planilhas <- drive_find()
lista_planilhas <- drive_find(type = "spreadsheet")
View(lista_planilhas)
View(lista_planilhas)
lista_planilhas$name
lista_planilhas$id[name == "Procedimentos (Responses)" ]
lista_planilhas[name == "Procedimentos (Responses)" ]$id
lista_planilhas[name == "Procedimentos (Responses)" ]
lista_planilhas[name == "Procedimentos (Responses)"]
lista_planilhas[name == "Procedimentos (Responses)",]
lista_planilhas[,name == "Procedimentos (Responses)"]
class(lista_planilhas)
lista_planilhas[,name == "Procedimentos (Responses)"]
View(lista_planilhas)
View(lista_planilhas)
lista_planilhas[,name == "	Procedimentos (Responses)"]
lista_planilhas
lista_planilhas[name == "	Procedimentos (Responses)",]
lista_planilhas %>%
filter(name == "	Procedimentos (Responses)")
lista_planilhas %>%
filter(name == "	Procedimentos (Responses)") %>%
pull(id)
lista_planilhas %>%
filter(name == "Procedimentos (Responses)") %>%
pull(id)
lista_planilhas["Procedimentos (Responses)",] %>%
filter(name == "Procedimentos (Responses)") %>%
pull(id)
lista_planilhas["Procedimentos (Responses)",]
lista_planilhas[,"Procedimentos (Responses)"] %>%
filter(name == "Procedimentos (Responses)") %>%
pull(id)
lista_planilhas[,"Procedimentos (Responses)"]
lista_planilhas["Procedimentos (Responses)"]
lista_planilhas["Procedimentos (Responses)",]
lista_planilhas[name == "Procedimentos (Responses)",]
lista_planilhas[name == "Procedimentos (Responses)",]
lista_planilhas[,]
respostas_ws
respostas_ws[Procedimento == "Intubaçãp",]
respostas_ws[,Procedimento == "Intubaçãp"]
respostas_ws[,Procedimento == "Intubação"]
respostas_ws[Procedimento == "Intubação",]
lista_planilhas[,Procedimento == "Intubação"]
lista_planilhas[1,]
lista_planilhas[Procedimento == "Intubação",]
lista_planilhas$id
lista_planilhas$name
lista_planilhas$name == "Procedimentos (Responses)"
lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)"]$id
lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]
# Carrega a SpreadSheet(ss) Procedimentos (Response)
ss <- drive_get(id = lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2])
# Carrega a SpreadSheet(ss) Procedimentos (Response)
ss <- drive_get(id = (lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]))
lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 3]
# Carrega a SpreadSheet(ss) Procedimentos (Response)
ss <- drive_get(id = (lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]))
lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]$id
lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]
"Procedimentos (Responses)"
lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]
lista_planilhas[[lista_planilhas$name == "Procedimentos (Responses)", 2]]
lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]$id
# Carrega a SpreadSheet(ss) Procedimentos (Response)
ss <- drive_get(id = lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]$id)
lista_planilhas[lista_planilhas$name == "Procedimentos (Responses)", 2]$drive_resource
View(lista_planilhas[[3]][[1]])
# Listas as planilhas dentro do arquivo do Dashboard
sheets_get(ss)
respostas_ws
ss <- drive_get(id = planilha)
carrega_planilha_google <- function(arquivo , planilha) {
# Carrega a SpreadSheet(ss) Procedimentos (Response)
lista_planilhas <- drive_find(type = "spreadsheet")
id_arquivo <- lista_planilhas[lista_planilhas$name == arquivo, 2]$id
ss <- drive_get(id = id_arquivo)
sheets_read(ss, sheet = planilha)
}
resposta_ws <- carrega_planilha_google(arquivo = "Procedimentos (Responses)", planilha = "Form Responses 1")
respostas_ws
ss <- drive_get(id = id_arquivo)
sheets_read(ss, sheet = planilha)
carrega_planilha_google <- function(arquivo , planilha = "Form Responses 1") {
# Carrega a SpreadSheet(ss) Procedimentos (Response)
lista_planilhas <- drive_find(type = "spreadsheet")
id_arquivo <- lista_planilhas[lista_planilhas$name == arquivo, 2]$id
ss <- drive_get(id = id_arquivo)
sheets_read(ss, sheet = planilha)
}
antigas_ws <- carrega_planilha_google(arquivo = "Registro de Procedimentos (Responses)")
# Cria DF das respostas
respostas <- carrega_planilha_google(arquivo = "Procedimentos (Responses)", planilha = "Form Responses 1")
antigas <- carrega_planilha_google(arquivo = "Registro de Procedimentos (Responses)")
# Conversão de tipos
respostas$Timestamp <- mdy_hms(respostas$Timestamp)
respostas$Timestamp
# Cria DF das respostas
respostas <- carrega_planilha_google(arquivo = "Procedimentos (Responses)", planilha = "Form Responses 1")
# Conversão de tipos
respostas$Prontuário <- as.numeric(respostas$Prontuário)
# Conversão de tipos
respostas$Prontuário <- as.numeric(unlist(respostas$Prontuário))
# Conversão de tipos
respostas$Prontuário <- as.numeric(unlist(respostas$Prontuário, use.names = TRUE))
# Conversão de tipos
respostas$Prontuário <- as.numeric(as.character(respostas$Prontuário))
respostas <- troca_tipo(respostas,c("Residente", "Procedimento", "Estágio", "Preceptor"), fun = as.factor)
names(respostas) <- c("timestamp", "residente", "prontuario", "data", "estagio", "procedimento",
"sucesso", "complicacoes", "preceptor", "observacoes", "eco")
# Carrega as respostas antigas --------------------------------------------
antigas$`Qual procedimento?` <- if_else((antigas$`Qual o procedimento realizado?`) == "Outro", antigas$`Qual procedimento?`, antigas$`Qual o procedimento realizado?`)
antigas
levels(factor(antigas$`Quem realizou o procedimento?`))
# Cria o data frame RECICLADO para usar as respotas antigas de acordo com o novo padrão
reciclado <- antigas[, c("Carimbo de data/hora", "Quem realizou o procedimento?", "Número do prontuário",
"Data do procedimento", "Onde foi realizado?", "Qual procedimento?", "Complicações imediatas", "Complicações",
"Preceptor responsável", "Nome do supervisor")]
reciclado$Preceptor <- if_else(is.na(reciclado$`Preceptor responsável`) & is.na(reciclado$`Nome do supervisor`),"Não","Sim")
reciclado$`Nome do supervisor` <- NA
reciclado$`Complicações imediatas` <- NA
reciclado$`Preceptor responsável` <- NULL
names(reciclado)
names(respostas)
names(reciclado) <- c("timestamp", "residente", "prontuario", "data", "estagio", "procedimento",
"sucesso", "complicacoes", "observacoes",  "preceptor")
reciclado <- reciclado[, c("timestamp", "residente", "prontuario", "data", "estagio", "procedimento",
"sucesso", "complicacoes", "preceptor", "observacoes") ]
reciclado$antigo <- TRUE
respostas$antigo <- FALSE
# Correção dos Nones dos Residentes
reciclado$residente <- if_else(reciclado$residente == "Eliana Schneider", "Eliana Iora Schneider", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Gabriel Miranda", "Gabriel Curubeto Lona de Miranda", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Laura Zanrosso", "Laura Zaparoli Zanrosso", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Maria Luisa Adib", "Maria Luisa Barrufi Adib", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Ana Beatriz Aguiar", "Ana Beatriz Machado de Aguiar", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Camila Osorio" , "Camila Osório Silveira", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Felicia", "Felícia Mariana Machado Lima", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Laisa Matana", "Laisa Manuela Mattana", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Marcella Barbosa", "Marcella de Lima Barbosa", reciclado$residente)
reciclado$residente <- if_else(reciclado$residente == "Mauricio Lazzarin", "Mauricio da Costa Lazzarin", reciclado$residente)
reciclado$residente <- as.factor(reciclado$residente)
reciclado$hospital <- reciclado$estagio
reciclado$estagio
reciclado$estagio <- as.factor(NA)
respostas$hospital <- NA
reciclado$eco <- NA
resposta <- respostas
respostas <- rbind(reciclado, respostas)
respostas$dia_semana <- factor(weekdays(respostas$data), ordered = TRUE,
levels = c("Segunda Feira", "Terça Feira", "Quarta Feira", "Quinta Feira", "Sexta Feira", "Sábado", "Domingo"))
# Carrega a lista de residentes
residentes <- carrega_planilha_google(arquivo = "residentes", planilha = "Sheets1")
# Carrega a lista de residentes
residentes <- carrega_planilha_google(arquivo = "residentes", planilha = "Sheet1")
# Conversão de tipos da lista dos residentes
residentes <- troca_tipo(residentes, c("residente", "residencia", "nick"), as.factor)
# Merge na lista de residentes e as repostas
respostas <- left_join(respostas, residentes, by = c("residente"))
respostas <- troca_tipo(respostas, c("residente"), as.factor)
saveRDS(respostas, "~/Dropbox/Coding/R/misc/procedimentos/data/respostas.rds")
saveRDS(residentes, "~/Dropbox/Coding/R/misc/procedimentos/data/residentes.rds")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(RColorBrewer)
library(extrafont)
library(scales)
library(chron)
library(treemap)
library(ggthemes)
library(ggmap)
library(knitr)
library(readr)
library(readxl)
library(xtable)
library(kableExtra)
library(rebus)
library(tibble)
library(cronR)
library(lubridate)
library(tidyverse)
library(googlesheets)
library(rmarkdown)
setwd("~/Dropbox/Coding/R/misc/procedimentos")
Sys.setenv(TZ="Brazil/East")
options(tz="Brazil/East")
Sys.getenv("TZ")
Sys.setlocale("LC_TIME", "pt_BR")
source("~/Dropbox/Coding/R/funs/msrfun.R")
# source("~/Dropbox/Coding/R/misc/procedimentos/src/01 - Carrega Planilhas.R")
# Carrega os dados
respostas <- readRDS(file = "~/Dropbox/Coding/R/misc/procedimentos/data/respostas.rds")
residentes <- readRDS(file = "~/Dropbox/Coding/R/misc/procedimentos/data/residentes.rds")
residentes$residente
residentes$r <- ifelse(residentes$r == "#N/A", NA, residentes$r)
residentes$r
lista <- list(split(respostas, respostas$residente))
slices <- residentes %>%
filter(!is.na(r)) %>%
select((residente)) %>%
pull(residente)
# slices <- slices$residente
todas_respostas <- respostas
# todas_respostas %>%
#   filter(nick == "Zaffari")
#respostas$r
#respostas <- respostas %>%
#  filter(r != "#N/A")
for (v in slices) {
render("~/Dropbox/Coding/R/misc/procedimentos/src/reports.Rmd",
output_file=paste0("~/Dropbox/Coding/R/misc/procedimentos/out/", v, ".html"),
params=list(new_title = paste("Relatório para Dr(a).", v), nome = v, df_respostas = respostas, df_residentes = residentes))
}
source('~/Dropbox/Coding/R/misc/procedimentos/src/01 - Carrega planilhas.R', echo=TRUE)
source('~/Dropbox/Coding/R/misc/procedimentos/src/01 - Carrega planilhas.R', echo=TRUE)
source('~/Dropbox/Coding/R/misc/procedimentos/src/01 - Carrega planilhas.R', echo=TRUE)
View(read_excel_allsheets)
source('~/Dropbox/Coding/R/misc/procedimentos/src/01 - Carrega planilhas.R', echo=TRUE)
